version: "3"

services:
  db:
    image: postgres:latest
    container_name: postgresql
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: findit
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - production-network

  node1:
    build:
      dockerfile: ./server/docker/node.dockerfile
      context: .
    image: uemurabruno/findit-backend
    container_name: node-js-1
    depends_on:
      - db
    restart: always
    networks:
      - production-network
    ports:
      - "4000"

  node2:
    build:
      dockerfile: ./server/docker/node.dockerfile
      context: .
    image: uemurabruno/findit-backend
    container_name: node-js-2
    depends_on:
      - db
    restart: always
    networks:
      - production-network
    ports:
      - "4000"

  node3:
    build:
      dockerfile: ./server/docker/node.dockerfile
      context: .
    image: uemurabruno/findit-backend
    container_name: node-js-3
    depends_on:
      - db
    restart: always
    networks:
      - production-network
    ports:
      - "4000"

  nginx:
    build:
      dockerfile: ./server/docker/nginx.dockerfile
      context: .
    image: uemurabruno/nginx
    container_name: nginx-gateway
    ports:
      - "5000:5000"
    networks:
      - production-network
    depends_on:
      - "node1"
      - "node2"
      - "node3"

  nextjs:
    build:
      dockerfile: ./client/docker/next.dockerfile
      context: .
    container_name: react-js
    environment:
      BACKEND_API: http://localhost
    ports:
      - "80:3000"
    depends_on:
      - "nginx"

networks:
  production-network:
    driver: bridge
